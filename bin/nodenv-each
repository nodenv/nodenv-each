#!/usr/bin/env bash
#
# Summary: Execute a command for each Node version
#
# Usage: nodenv each [-g] [-v] [--] <command> [arg1 arg2...]
#
# Executes a command for each Node version by setting NODENV_VERSION.
# Failures are collected and reported at the end.
#
# Options:
#   --help, -h      Show help/usage
#   --system, -g    Include the system `node`.
#   --verbose, -v   Verbose mode. Prints a header for each node.
#
set -e
[ -n "$NODENV_DEBUG" ] && set -x

# Provide nodenv completions
if [ "$1" == --complete ]; then
  echo --system
  echo --verbose
  nodenv-shims --short
  exit
fi

for arg in "$@"; do
  case "$arg" in
  -h | --help)
    nodenv-help each
    exit
    ;;
  -g | --system)
    include_system=1
    ;;
  -v | --verbose)
    verbose=1
    ;;
  --)
    shift
    break
    ;;
  "" | -*)
    nodenv-help --usage each >&2
    exit 1
    ;;
  *) break ;;
  esac
  shift
done

if [ $# -eq 0 ]; then
  nodenv-help --usage each >&2
  exit 1
fi

GRAY=""
RED=""
YELLOW=""
NORMAL=""

if [ -t 1 ]; then
  GRAY="\\033[1;30m"
  RED="\\033[0;31m"
  YELLOW="\\033[0;33m"
  NORMAL="\\033[0m"
fi

failed_nodes=""

trap "exit 1" INT

for node in ${include_system:+system} $(nodenv-versions --bare --skip-aliases); do
  if [ -n "$verbose" ]; then
    header="===[$node]==================================================================="
    header="${header:0:72}"
    header="${header/[/[${YELLOW}}"
    header="${header/]/${GRAY}]}"
    echo -e "${GRAY}${header}${NORMAL}"
  fi

  NODENV_VERSION="$node" "$@" || failed_nodes="$failed_nodes $node"

  [ -n "$verbose" ] && echo
done

if [ -n "$failed_nodes" ]; then
  echo -e "${RED}FAILED IN:${failed_nodes}${NORMAL}"
  exit 1
fi
